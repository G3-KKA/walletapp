// Code generated by mockery v2.46.3. DO NOT EDIT.

package mock_handlers

import (
	uuid "github.com/google/uuid"
	mock "github.com/stretchr/testify/mock"
)

// MockWalletUsecase is an autogenerated mock type for the WalletUsecase type
type MockWalletUsecase struct {
	mock.Mock
}

// GetWalletBalance provides a mock function with given fields: walletID
func (_m *MockWalletUsecase) GetWalletBalance(walletID uuid.UUID) (int, error) {
	ret := _m.Called(walletID)

	if len(ret) == 0 {
		panic("no return value specified for GetWalletBalance")
	}

	var r0 int
	var r1 error
	if rf, ok := ret.Get(0).(func(uuid.UUID) (int, error)); ok {
		return rf(walletID)
	}
	if rf, ok := ret.Get(0).(func(uuid.UUID) int); ok {
		r0 = rf(walletID)
	} else {
		r0 = ret.Get(0).(int)
	}

	if rf, ok := ret.Get(1).(func(uuid.UUID) error); ok {
		r1 = rf(walletID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateWalletBalance provides a mock function with given fields: walletID, amount
func (_m *MockWalletUsecase) UpdateWalletBalance(walletID uuid.UUID, amount int) error {
	ret := _m.Called(walletID, amount)

	if len(ret) == 0 {
		panic("no return value specified for UpdateWalletBalance")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(uuid.UUID, int) error); ok {
		r0 = rf(walletID, amount)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMockWalletUsecase creates a new instance of MockWalletUsecase. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockWalletUsecase(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockWalletUsecase {
	mock := &MockWalletUsecase{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
